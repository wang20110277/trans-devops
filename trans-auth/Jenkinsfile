pipeline {
    agent any
    // 环境变量
    environment {
        HARBOR_CREDS = credentials('jenkins-harbor-creds')
    }
    // 入参定义
    parameters {
        string(name: 'model_name', defaultValue: 'trans-auth', description: '部署模块名称')
        string(name: 'registry_ns', defaultValue: '192.168.10.30:5566/trans', description: '镜像命名空间')
        string(name: 'tag_name', defaultValue: 'latest', description: 'tag名称')
    }
    stages{
        stage('1.检出代码') {
            steps{
                sh 'rm -rf /home/jenkins_home/workspace/trans/*'
                // 检出代码
                checkout([$class: 'GitSCM', branches: [[name: "*/main"]],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [],
                          submoduleCfg: [],
                          userRemoteConfigs: [[url: "https://github.com/wang20110277/trans-devops.git"]]])
            }
        }
        stage("2.编译打包"){
            steps{
                // 编译打包
                sh "cd trans-devops"
                sh "mvn clean package -pl ${params.model_name}"
            }
        }
        stage('3.推送镜像') {
            steps {
                echo "push images "
                sh "docker login -u ${HARBOR_CREDS_USR} -p ${HARBOR_CREDS_PSW} 192.168.10.30:5566"
                sh "docker push ${params.registry_ns}/${params.model_name}:${params.tag_name}"
                echo "push success! "
            }
        }
        stage("4.应用部署") {
            steps {
                sh "kubectl apply -f  document/k8s/${params.model_name}-deployment.yaml --namespace=trans"
                sh "kubectl apply -f  document/k8s/${params.model_name}-service.yaml --namespace=trans"
                echo "项目部署成功"
            }
        }
    }
}